syntax = "proto3";
package pax.gridnode;

import "google/api/annotations.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "pax/gridnode/params.proto";


option go_package = "github.com/unigrid-project/cosmos-gridnode/x/gridnode/types";

// Msg defines the Msg service for gridnode module.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc DelegateTokens(MsgGridnodeDelegate) returns (MsgGridnodeDelegateResponse) {
    option (google.api.http) = {
      post: "/gridnode/delegate-tokens"
      body: "*"
    };
  }
  rpc UndelegateTokens(MsgGridnodeUndelegate) returns (MsgGridnodeUndelegateResponse) {
    option (google.api.http) = {
      post: "/gridnode/undelegate-tokens"
      body: "*"
    };
  }
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

message Delegation {
  string delegator_address = 1;
  int64 amount = 2;
}

// MsgGridnodeDelegate is the request type for the Msg/DelegateTokens RPC method.
message MsgGridnodeDelegate {
  option (cosmos.msg.v1.signer) = "delegator_address";
  string delegator_address = 1;
  int64 amount = 2;
  int64 timestamp = 3; // Timestamp in Unix format or
  string unique_id = 4; // unique identifier UUID
}

// MsgGridnodeDelegateResponse is the response type for the Msg/DelegateTokens RPC method.
message MsgGridnodeDelegateResponse {
  string tx_hash = 1; // Transaction hash of the delegated tokens operation
  string status = 2;  // Status of the operation, e.g., "success" or "failure"
}

message MsgGridnodeUndelegate {
  option (cosmos.msg.v1.signer) = "delegator_address";
  string delegator_address = 1;
  int64 amount = 2;
  int64 timestamp = 3; // Timestamp in Unix format or
  string unique_id = 4; // unique identifier UUID
}

message MsgGridnodeUndelegateResponse {
  string tx_hash = 1; // Transaction hash of the delegated tokens operation
  string status = 2;  // Status of the operation, e.g., "success" or "failure"
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "cosmos-gridnode/x/gridnode/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}